{"meta":{"title":"Han's Blog","subtitle":111,"description":111,"author":"Han","url":"http://hanunimaas.com"},"pages":[{"title":"all-archives","date":"2017-11-19T16:33:10.260Z","updated":"2017-11-19T16:33:10.240Z","comments":false,"path":"all-archives/index.html","permalink":"http://hanunimaas.com/all-archives/index.html","excerpt":"","text":""},{"title":"all-categories","date":"2017-11-19T16:30:59.675Z","updated":"2017-11-19T16:30:59.653Z","comments":false,"path":"all-categories/index.html","permalink":"http://hanunimaas.com/all-categories/index.html","excerpt":"","text":""},{"title":"all-tags","date":"2017-11-19T16:32:56.913Z","updated":"2017-11-19T16:32:35.481Z","comments":false,"path":"all-tags/index.html","permalink":"http://hanunimaas.com/all-tags/index.html","excerpt":"","text":""}],"posts":[{"title":"测试α6300相机ISO不变性","slug":"testing-ISO-invariance","date":"2017-12-08T21:55:54.000Z","updated":"2017-12-09T08:28:51.300Z","comments":true,"path":"2017/12/08/testing-ISO-invariance/","link":"","permalink":"http://hanunimaas.com/2017/12/08/testing-ISO-invariance/","excerpt":"实验表明α6300相机具有ISO不变性","text":"先来一篇α6000的测试：Sony α6000 Astrophotography Review ISO不变性是指在不同的ISO下以相同的光圈和快门拍摄照片，在后期调整曝光一致以后图像的噪点和画质等维持相同水平，成为该相机具有ISO不变性的特点。 测试α6300相机ISO不变性测试方法：固定光圈和快门，固定白平衡，关闭机内降噪，在不同的ISO下对同样的场景拍摄一组raw格式照片，并后期调整，统一曝光。 光圈：f/2.0 快门：1/25s ISO: 100, 200, 400, 800, 1600, 3200, 6400, 12800, 25600。其中3200为机内多重测光结果下的标准曝光。 统一曝光：在Lightroom中，分别对以上图像进行后期调整 +5EV, +4EV, +3EV, +2EV, +1EV, 0EV, -1EV, -2EV, -3EV曝光调整。 首先是9张不同曝光的照片，相同光圈快门不同ISO： 统一曝光： ISO100(+5EV) vs ISO3200： 只有高ISO(25600)的几张过曝部分无法还原，高光部分有些色彩偏移。总体上来说不同ISO下图像水准基本一致。 ISO100(+5EV) vs ISO3200, 100%： 可以看到ISO100(+5EV)噪点略高，但总体上基本保持一致，色调和曝光等没有明显偏移和恶化。 ISO3200 vs ISO25600(-3EV)： ISO3200 vs ISO25600(-3EV), 100%： 可以看到高ISO并不意味着高噪点。调整曝光后，噪点水平几乎一致。然而过曝部分无法通过后期还原。 最后再看一下相同曝光不同ISO下的画质对比，ISO100 vs ISO3200, 100%： 在有条件接收充足光线的情况下，还是可以明显看到ISO100画质要远好于ISO3200。 ##结论 α6300具有ISO不变性，在不同的ISO下拍摄，最终调整曝光后，画面质量和噪点几乎不变。 ISO不变性的意义ISO不变性并不是评价一部相机成像质量的指标。它只反映出相机传感器的性质，也就是说通过调整相机ISO设置提高曝光和后期提高曝光几乎等同，这意味着该相机的ISO主要是靠内部处理器对传感器采集的信号进行放大运算而实现的，且该放大过程与计算机后期运算基本等同。 ISO不变性的用途 在一些光线较暗，光比较大的场景中（比如城市夜景），按照机内测光增加ISO曝光，往往高光部分会过曝，失去原有的色彩。可以使用低ISO进行曝光，后期再提亮暗部，既可以保持高光不过曝，又可以恢复暗部的细节。 在星空和银河摄影中，光线极暗，为保证接收到足够光线，需要大光圈和长曝光。然而由于地球自转的原因，为了保证星星不会拖影，超广角镜头下曝光时间通常最大只能达到30秒，在这个时候只有通过增加ISO获得准确曝光。 高ISO并不可怕，用高ISO拍摄并不代表噪点多。可以看到ISO25600拍摄照片再降3EV曝光后和ISO3200的照片噪点水平基本一致。这一点在暗光摄影中非常有用。在星空摄影中可以向右曝光，保证高光不过曝的前提下记录足够多的细节，在后期再还原标准曝光。 需要注意的是，很多相机虽然具有ISO不变性，但不可滥用。 ISO不变性只是近似结果，通常并不意味着不同ISO下调整曝光后的图像画质可以达到完全一致的水平。 高ISO下拍摄再降低曝光，虽然不会影响噪点水平，但是高ISO下图像的动态范围会减小。 高ISO下向右曝光虽然可以保留更多细节，但是要避免高光过曝，过曝部分后期无法挽救。","categories":[{"name":"Photography","slug":"Photography","permalink":"http://hanunimaas.com/categories/Photography/"}],"tags":[]},{"title":"《极致之美》——前期篇","slug":"yunman-photography-3","date":"2017-12-06T20:17:50.000Z","updated":"2017-12-07T21:31:16.700Z","comments":true,"path":"2017/12/06/yunman-photography-3/","link":"","permalink":"http://hanunimaas.com/2017/12/06/yunman-photography-3/","excerpt":"初学者要学习规则，但迟早来说这些规则是需要被打破的","text":"如果我们前期选择了错误的光线或构图，那么后期再强大也不可能得到一张好的摄影作品。 光线的色彩和形态风光摄影的“黄金时刻”：日出后半小时，日落前半小时。这个时候色调温暖，角度很低，非常适合风光摄影。然而，日出前、日落后、阴雨天、峡谷内或夜间的光线是非直接的，这种光线更柔和，拍摄出的照片也更容易表达特定的情绪。 光线的色彩按照色彩来分： 暖调：日出前的朝霞、日落后的晚霞、黄金时刻的阳光。 冷调：“蓝调时刻”、阴雨天、还有晴天的阴影处。 中性调：白天的阳光。 “黄金时刻”指的是刚刚日出后或即将日落前，光线色彩如金色一般温暖的时机。 “蓝调时刻”指的是日出前或日落后的一段时间，大概日落后30-40分钟，天空会慢慢越来越暗，越来越蓝。这时特别适合表现安静、寒冷的气氛。蓝调时刻也是拍摄城市夜景的最佳时刻。 “高山辉”是在有高耸雪山地区常见的一种大气光学气象。黎明之际，日出之前，如果面对雪山，日出的方向在我们身后，常常可以看见山峰慢慢被一种从暗红到粉红色彩的光线照亮。除了日出之前外，日落之后，我们也常常可以观察到高山辉现象。 “维纳斯带”是日出前和日落后，背对太阳一面的地平线上方出现的一条粉紫色迷人色调。它的可见区域要广得多——在几乎所有的平原或山区我们都能看到它。 光线的色温和白平衡设置白平衡的选择有一定的艺术主观性，因为相机看到的世界和人眼看到的色彩可能非常不一样。 一般来说，如果环境中有绚丽的彩霞，自动白平衡几乎都会犯错误。这是一般都要手动设置白平衡，最佳色温尝尝要设定在8000-9000K以上。日出前或日落后的弱光状态同样也可以把色温设置在8000-9000K以上，否则画面会太冷。白天多用日光白平衡或相近设置，蓝调时刻也是用日光白平衡而不是自动白平衡。夜晚的时候白平衡可以设定在3500-4500K之间，让天空出现淡淡的冷调。此时如果拍摄的是城市光污染，用日光白平衡会更温暖。 光线的形态风光摄影中常用的光线有下面几种形态： 漫射光：包括朝霞和晚霞的暖调、阴雨天和雾天柔光、蓝调时刻的冷调，还有晴天时背光面的均匀光线。 直射光：包括顺光、测光、逆光和顶光。 反射光：阳光照射到山峰、石壁等处反射回来的光线。 夜景弱光：主要指夜间的光线，如星光、极光和月光。 人造光：闪光灯、手电筒、篝火等人工光线。 漫射光朝霞/晚霞：最适合拍摄大场景大风光的时刻，这时更适合用广角镜头，把天空和地面同时拍下。由于光比较大，需要用渐变滤镜或者包围曝光来平衡天空和地面的光比。 蓝调时刻：日出半小时前和日落半小时后，同样是拍摄的大好时机。在蓝调时刻，天空和地面的光线亮度几乎一致，极少有需要使用渐变滤镜和包围曝光的时候。蓝调时刻的另一个好处就是哪怕天上没有什么云，一般也能拍到很不错的作品。将白平衡设置到“日光”左右，相机能忠实记录下此时的冷调。 阴雨雾天的柔光：通常不适合拍摄大风光场景，但适合表现花草娇嫩的质感，流水的柔美，树林的宁静，或者描绘本身就很鲜艳的物体的色彩。 晴天的阴影处：这种光线同样最适合拍摄小溪，瀑布或植物细节。在构图上，一般阴雨雾天，或在晴天的阴影处时，应尽量避免画面中出现天空，除非天空中云的形状很漂亮。 直射光按照光线的方向，直射光又分为顺光、测光、逆光和顶光几大类。 顺光是指太阳从静物正前方照射过来的光线，这样的光线没有明显的阴影，画面平台，立体感很差，此时应尽可能换一个构图角度，用表现力强很多的测光来拍摄。但是，日出日落时的低角度顺光，还是常常会用到，特别是金红色的阳光点亮山头的时候。 测光是指太阳从景物侧面，特别是侧前方照射过来的光线。这样有明暗光影效果的光线有超强的造型能力，是勾画物体三维轮廓，表现景物表面质感的最佳光线。需注意的是，侧光对比度比较大，在前后期都需谨慎处理，以得到合适的最终画面上的反差。 逆光是指太阳在景物背后，从镜头迎面射向被摄景物。这样的光线拍摄起来非常困难，因为光线的明亮对比非常大，但若处理得当，逆光可以是最戏剧化的光线。逆光的表现力极强，非常适合拍摄有浪花、冰晶、树叶等透明或半透明物体的场景。逆光下场景反差极大，大部分情况下也不太可能用滤镜平衡，所以拍摄时需要相机宽容度很高，或者用曝光合成技术。考虑光线直射镜头，镜头前面要非常干净，最好不要有别的滤镜。 顶光是指接近中午，太阳从上方照射下来的光线。一般来说，日出一个小时后的光线，色彩不够丰富，角度不够低，光线也太硬，这样的高角度顶光非常不适合拍摄风光摄影作品。 反射光反射光不太为初学者所熟知，但是非常独特，非常微妙。比如，美国西南部的许多峡谷，岩洞和拱门。拍摄这些场景，通常不是摄影师最喜欢的日出日落时分，因为此时光线照不进这些地方。拍摄这些地方的最佳光线是反射光。 以我在羚羊谷的拍摄经验来看，羚羊谷每天只有正午时分才是最佳拍摄时机，光线照进峡谷内不断反射，形成非常美丽的温暖辉光。 夜景弱光星光、极光、月光下的风光。这样的光线微弱而神秘，能拍出极具特色的作品。夜景光线的来源、色彩和形态千差万别，但它们的共同特点是亮度极其微弱。需要高ISO，大光圈，长曝光才能记录下来。 人造光在风光摄影中，人造光同样有用。 人造光在夜间最为有用，主要用于补光来照亮前景。风光摄影中最常用的人造光源，有小型电子闪光灯、手电筒、头灯、篝火等。一般来说，拍摄夜景的时候，倾向使用没有明显阴影的散射光补光。用闪光灯模仿散射光的办法很简单，在夜景几十秒长曝光的时候，手持闪光灯，小功率输出，多次多角度触发闪光灯照亮前景。相比单次大功率闪光，多角度多次小功率闪光的优点是光线明显柔和得多，前景各处亮度比较均匀。而白天给景物补光则很不一样，这时我们一般要模仿的是测光或反射光。需要补光的时候常常是傍晚，有可能需要几秒钟的曝光。如果是这样，可以手持闪光灯，把功率调到最大，在曝光过程中从侧面手动触发闪光灯。如果曝光时间很短，可以使用离机闪光遥控器。 除了闪光灯外，高亮度手电筒也可以为前景补光。另外手电筒是连续光，可以给喷泉、流水、海浪等运动物体补光。手电筒的可变焦距功能非常重要，可方便大面积补光。 to be continued…","categories":[{"name":"Photography","slug":"Photography","permalink":"http://hanunimaas.com/categories/Photography/"}],"tags":[]},{"title":"R语言学习（五）数据框","slug":"R-programming-5","date":"2017-12-05T19:12:29.000Z","updated":"2017-12-05T20:57:29.955Z","comments":true,"path":"2017/12/05/R-programming-5/","link":"","permalink":"http://hanunimaas.com/2017/12/05/R-programming-5/","excerpt":"第五章——数据框","text":"第五章——数据框 数据框类似矩阵，然而与矩阵不同的是，数据框每一列可以是不同的数据类型。正如列表可以类比为存储不同数据类型的一维向量，数据库可以类比为按列存储不同数据类型的二维矩阵。就技术层面而言，数据框是每个组件长度都相等的列表。 创建数据框首先说stringAsFactors = FALSE，在创建数据框的时候，如果没有给定参数，那么stringAsFactors默认为TRUE，这意味着如果用字符向量创建数据框，R会将向量转换为“因子”factor: &gt; kids &lt;- c(\"Jack\", \"Jill\")&gt; ages &lt;- c(12,10)&gt; d &lt;- data.frame(kids, ages, stringsAsFactors=F)&gt; d kids ages1 Jack 122 Jill 10&gt; d[[1]][1] \"Jack\" \"Jill\"&gt; d$kids[1] \"Jack\" \"Jill\"&gt; d[,1][1] \"Jack\" \"Jill\"&gt; str(d)'data.frame': 2 obs. of 2 variables: $ kids: chr \"Jack\" \"Jill\" $ ages: num 12 10 有三种方式访问数据框的第一列：d[[1]]、d[,1]、d$kids。其中第三种更简明，而且比前两种方式更安全。这种方式可以更好的指定列，并且减少出错的可能性。但是在写一般的代码时，矩阵式的索引d[,1]也是需要的。 矩阵式操作提取子数据库可以像矩阵那样按行或按列提取子数据框。如果返回的是(某行/列)向量，设定参数drop = FALSE可以得到一个一行/列的数据框：dataframe[2:5, 2, drop = FALSE]。 也可以做筛选：dataframe[dataframe$V1 &gt; 5,] 缺失值处理有些情况下，在有缺失值的时候，需要设置参数na.rm = TRUE来明确告诉R忽略缺失值： &gt; x &lt;- c(2,NA,4)&gt; mean(x)[1] NA&gt; mean(x, na.rm = T)[1] 3 使用subset()函数，不用自己设定na.rm = TRUE。可以把它应用在数据框上来选择行。列名称将从给定数据框中获取。以下两句作用是相同的： &gt; dataframe[dataframe$V1 &gt; 5,]&gt; subset(dataframe, V1 &gt; 5) 使用complete.cases()可以返回含有缺失值的行。 使用rbind()和cbind()函数矩阵函数rbind()和cbind()同样可以应用于数据框，前提是两个数据框有相同的行数或者列数。 &gt; d kids ages1 Jack 122 Jill 10&gt; rbind(d, list(\"laura\", 19)) kids ages1 Jack 122 Jill 103 laura 19 可以用names()修改变量名称，不过最好还是利用数据框的列表属性，用以下方式给数据框添加一个长度相同的新列： &gt; dataframe$new.column &lt;- datalist 利用循环补齐，可以向数据框添加长度不同的列： &gt; d kids ages1 Jack 122 Jill 10&gt; d$one &lt;- 1&gt; d kids ages one1 Jack 12 12 Jill 10 1 使用apply()函数如果数据库的每一列数据类型相同，则可以对该数据框使用apply()函数。 合并数据库使用merge(x,y)合并两个数据框。假设数据框x和y有一个或多个同名的列，该语句可以合并这两个数据框： &gt; d1 kids states1 Jack CA2 Jill MA3 jillian MA4 John HI&gt; d2 ages kids1 10 Jill2 7 Lillian3 12 Jack&gt; d &lt;- merge(d1, d2)&gt; d kids states ages1 Jack CA 122 Jill MA 10 这两个数据框都有变量kids，R在两个数据框里查找kids变量相同的行，然后再用查找到的行和两个数据框里所有的列创建新的数据框。 函数merge()有两个参数by.x和by.y，用于标示出两个数据框里含有相同信息但名称不同的两个变量： &gt; d3 ages pals1 10 Jack2 7 Jill3 12 Lillian&gt; merge(d1, d3, by.x=\"kids\", by.y=\"pals\") kids states ages1 Jack CA 102 Jill MA 7 应用于数据框的函数与列表一样，lapply()和sapply()函数也可以应用于数据框。 在数据库上应用lapply()和sapply()函数数据框是列表的特例，在数据框上应用lapply()函数，指定函数是f()，f()函数会作用于数据框的每一列，然后将返回值置于一个列表中： &gt; dl &lt;- lapply(d ,sort)&gt; dl$kids[1] \"Jack\" \"Jill\"$ages[1] 10 12$one[1] 1 1 可以把列表dl强制转化为数据框： &gt; as.data.frame(dl) kids ages one1 Jack 10 12 Jill 12 1&gt; d kids ages one1 Jack 12 12 Jill 10 1 但是这样做没有意义，因为这样丢失了名字和年龄的对应关系。","categories":[{"name":"R programming","slug":"R-programming","permalink":"http://hanunimaas.com/categories/R-programming/"}],"tags":[]},{"title":"Cytoscape Automation Workshop at Maastricht University","slug":"cytoscape-automation","date":"2017-11-26T20:39:36.000Z","updated":"2017-11-27T16:57:21.255Z","comments":true,"path":"2017/11/26/cytoscape-automation/","link":"","permalink":"http://hanunimaas.com/2017/11/26/cytoscape-automation/","excerpt":"This workshop is given by Dr. Alexander Pico, the Vice President of the Cytoscape Consortium","text":"Main Webpage of this Workshop Presentation at Maastricht University Cytoscape Tutorial Cytoscape Github Page A Cytoscape Automation Example: Loading Disease Network into Cytoscape via R","categories":[],"tags":[]},{"title":"R语言学习（四）列表","slug":"R-programming-4","date":"2017-11-22T19:19:44.000Z","updated":"2017-11-22T20:16:19.402Z","comments":true,"path":"2017/11/22/R-programming-4/","link":"","permalink":"http://hanunimaas.com/2017/11/22/R-programming-4/","excerpt":"第四章——列表","text":"第四章——列表 向量的元素要求都是同类型的，而列表（list）与向量不同，可以存储多个不同类型的对象。 创建列表技术上讲，列表即向量。 创建一个列表来表示某个雇员： &gt; j &lt;- list(name = \"Joe\", salary = 55000, union = T)&gt; j$name[1] \"Joe\"$salary[1] 55000$union[1] TRUE R语言中列表各组件的名称叫做标签（tags），通过标签索引内容。 推荐为列表中每个元素命名，当然也可以不指定标签创建列表： &gt; jalt &lt;- list(\"Joe\", 55000, T)&gt; jalt[[1]][1] \"Joe\"[[2]][1] 55000[[3]][1] TRUE 因为列表是向量，也可用vector()创建列表： &gt; z &lt;- vector(mode = \"list\")&gt; z[[\"abc\"]] &lt;- 3&gt; z$abc[1] 3 列表的常规操作索引列表直接索引返回元素本身： lst$c lst[[&quot;c&quot;]] lst[[i]]，i是c在lst中的数字标号 索引元素并返回列表： lst[&quot;c&quot;] lst[i]，i是c在lst中的数字标号 若使用单中括号[]索引，则返回一个新的列表： &gt; j[[1]][1] \"Joe\"&gt; j[1]$name[1] \"Joe\"&gt; j[1]$name[1] \"Joe\" 对原列表取子集，返回的是一个新的列表，而双重中括号一次只能提取列表的一个元素，返回值是列表元素本身： &gt; j[[1:2]]Error in j[[1:2]] : subscript out of bounds&gt; j[1:2]$name[1] \"Joe\"$salary[1] 55000 增加或删除列表元素向列表直接赋值来添加新的元素： &gt; z &lt;- list(a=\"abc\", b=12)&gt; z$c &lt;- \"sailing\"&gt; z$a[1] \"abc\"$b[1] 12$c[1] \"sailing\"&gt; z[3]$c[1] \"sailing\" 还可以使用索引添加元素： &gt; z[[4]] &lt;- 28&gt; z[5:7] &lt;- c(F,T,T)&gt; z$a[1] \"abc\"$b[1] 12$c[1] \"sailing\"[[4]][1] 28[[5]][1] FALSE[[6]][1] TRUE[[7]][1] TRUE 要删除列表元素 直接赋值为NULL即可： &gt; z$a[1] \"abc\"$c[1] \"sailing\"[[3]][1] 28[[4]][1] FALSE[[5]][1] TRUE[[6]][1] TRUE 此时列表元素索引全部减1，原来的z[[4]]变成了z[[3]]。 拼接列表： &gt; c(list(\"Joe\", 55000), list(T))[[1]][1] \"Joe\"[[2]][1] 55000[[3]][1] TRUE 获取列表长度： &gt; length(j)[1] 3 访问列表元素和值获取列表各元素的标签，使用names()与unlist()： &gt; names(j)[1] \"name\" \"salary\" \"union\" &gt; unlist(j) name salary union \"Joe\" \"55000\" \"TRUE\" &gt; class(unlist(j))[1] \"character\" #原列表元素为字符型变量 unlist()返回的是一个向量，而且向量的元素名就是原列表的标签。 这里需要注意的是，在去列表化的时候，只要有可能，列表的元素都被强制转换成一种共同的存储模式，所以unlist()的结果通常都是字符串向量。 各种类型的优先级排序是：NULL &lt; raw &lt; 逻辑类型 &lt; 整型 &lt; 实数类型 &lt; 复数类型 &lt; 列表 &lt; 表达式 比如一个包含字符型元素和数值型元素的列表： &gt; w &lt;- list(a = 5, b = \"xyz\")&gt; wu &lt;- unlist(w)&gt; class(wu)[1] \"character\"&gt; wu a b \"5\" \"xyz\" #强制类型转换 为去掉向量的元素名，可以把元素名设为NULL，或者直接unname()： #第一种方法&gt; names(wu) &lt;- NULL&gt; wu[1] \"5\" \"xyz\"#第二种方法&gt; wu &lt;- unname(wu)&gt; wu[1] \"5\" \"xyz\" 在列表上使用apply()函数lapply()和sapply()的使用lapply()代表list apply，与矩阵的apply()函数类型，对列表的每个元素执行给定的函数，并返回另一个列表： &gt; lapply(list(1:3,25:29), mean)[[1]][1] 2[[2]][1] 27 而sapply()代表simplified [l]apply，返回向量或矩阵的形式： &gt; sapply(list(1:3,25:29), mean)[1] 2 27 递归型列表列表是可以递归的，即列表的组建也可以是列表： &gt; b &lt;- list(u = 5, v = 12)&gt; c &lt;- list(w = 13)&gt; a &lt;- list(b,c)&gt; a[[1]][[1]]$u[1] 5[[1]]$v[1] 12[[2]][[2]]$w[1] 13&gt; length(a)[1] 2 在用c()拼接列表的时候，有一个可选参数recursive，决定是否把原列表“压平”，就是把所有元素都提取出来组合成一个向量： &gt; c(list(a = 1, b = 2, c = list(d = 5, e = 9)))$a[1] 1$b[1] 2$c$c$d[1] 5$c$e[1] 9&gt; c(list(a = 1, b = 2, c = list(d = 5, e = 9)), recursive = T) a b c.d c.e 1 2 5 9 Warning message:In formals(fun) : argument is not a function 通过这种方式得到的向量，名称仍带有原来的递归特征。","categories":[{"name":"R programming","slug":"R-programming","permalink":"http://hanunimaas.com/categories/R-programming/"}],"tags":[]},{"title":"Astrophotography","slug":"Astrophotography","date":"2017-11-21T11:57:00.000Z","updated":"2017-11-27T14:16:02.353Z","comments":true,"path":"2017/11/21/Astrophotography/","link":"","permalink":"http://hanunimaas.com/2017/11/21/Astrophotography/","excerpt":"This article shows how to take photos for Milky way","text":"TutorialFirst, here is a quick guide to astrophotography: NIGHTSCAPES A comprehensive website for astrophotography: Lonely Speck Place to trace the Milky Way in EuropeRequirements Open public space High altitude No air/light pollution Best in summer from April to September, especially in June or July Easy to approach, car rent available The requirements above, making the milky way clearly visible, are fulfilled by the following places: Recommendation place Alqueva, Portugal A nice place around a lake with no light pollution at all, totally dark. Gran Canaria and Tenerife, Spain A 3700-meter-high mountain named Teide locates in the middle of Tenerife island. Astronomic tour is available on this island. This place is also famous for a Chinese writer, Sanmao, who lived for a long time on this island. What if in winter? Try to take photos for the Constellation Orion. Equipment:Astrophotography pushes your equipment to its limits. Knowing these limits is the first step to creat great images. For the best result in your own images, familiarize yourself with the limits of your lens and camera. Test how long of a shutter duration you can use before the stars being to trail with your lens, practice visualizing your lens’s field of view before you even look through the viewfinder, and find the suitable f/number that gives you the best balance of exposure and image quality. Once you’ve fully mastered the limits of your equipment, you are only limited by your imagination. Camera: Sony α6300This article shows advantages and limits in taking astrophotograph by Sony α6000: Sony α6000 Astrophotography Review Taking astrophotograph photos by even a much smaller sensor is also possible(see the article RX100), so there’s no reason to doubt the capability of your camera. Lens:How to Pick a Lens for Milky Way Photography Sony E 16mm F2.8 + VCL-ECU This lens kit which equal to 12mm f2.8 on full frame, and 18mm f2.8 on APS-C frame, archieves 1,110 Astro Lens Score, representing the super imaging quality by aboving the criteria of 1000 for an excellent lens. Sigma 30mm F1.4 DC DN | Contemporary On APS-C frame it is a standard lens with focal length at 45mm. Although the angle is not wide enough, the super clear aperture shows the possibility to capture enough light in a short time without letting the stars start trailing. However, the right way to use the standard lens is to take more than one photo with at least 50 percent overlapped in between, and then merge the photos into a panorama picutre in post processing procedures. Medium Format Astrophotography with Panorama Stitching Setting the right parameters Shoot in RAW Zoom out Manual focus Manual exposure Enable long exposure noise reduction Enable the histogram Use automatic white balance For the lens 16mm f2.8 with wide range adapter: Of course first to fully open the aperture. Second, in order to get rid of stars being to trail, the exposure time should be no more than 25s or 30s. Under this circumstance, what we can still control is the ISO. Evidence shows that cameras with the ability of ISO invariance can take the photo in low ISO and then push the exposure in post processing without hurting the image quality. f/2.8 28s ISO 3200 The parameters above is extrapolated in stops from a “standard”(there’s no standard actual standard…) Milky Way exposure of: 30s, f/2.0, ISO 1600. Post processingArticle: Hwo to Process Milky Way Astrophotography in Adobe Lightroom Noise Reduction with Image Stacking Milky Way Exposure Stacking with manual Alighment in Adobe Photoshop Removing Coma Aberration in Adobe Photoshop: Astrophotography Tutorial","categories":[{"name":"Photography","slug":"Photography","permalink":"http://hanunimaas.com/categories/Photography/"}],"tags":[]},{"title":"《极致之美》——基础篇","slug":"yunman-photography-2","date":"2017-11-19T18:41:37.000Z","updated":"2017-11-22T21:04:44.593Z","comments":true,"path":"2017/11/19/yunman-photography-2/","link":"","permalink":"http://hanunimaas.com/2017/11/19/yunman-photography-2/","excerpt":"本篇讲述摄影器材和基础知识","text":"摄影器材和设备机身相对于大画幅和中画幅数码后背而言，135全画幅数码相机是画质、便携性和价格的完美结合点。另外，APS-C画幅具有体积小，价格相对低廉的特点，虽然高感相比全画幅差距较大，但也基本能满足多数业余爱好者的需要。 镜头变焦镜头比定焦镜头更方便，这一点在风光摄影中显得格外重要。 超广角镜头（11~35mm） 风光摄影师主力镜头，能收下更多场景，而且还能强调前景，建立视觉纵深感。 广角和中焦镜头（35~70mm） 人文摄影师最喜欢的焦段。于风光摄影中，可以不用选择大口径光圈镜头，因为风光摄影通常只用f/8以下的光圈。 中长焦镜头（70mm以上） 可简化画面，获得干净的构图。此外，长焦镜头能压缩空间，让画面显得比较平面抽象。此焦段常用于拍摄风光小品。考虑风光摄影常用光圈，体积，价格等因素，此类镜头依然不建议购买大口径光圈镜头。 特殊题材 星空摄影需要大光圈（f/2.8以下）和超广角镜头。24mm有可能不够广，需要多张拼接。移轴镜头对建筑摄影师是不可或缺的，在风光摄影中可以避免透视变形，还能实现无变形拼图。 支撑系统和其他附件 三脚架 三脚架的重要性不言而喻，这是每个严肃的风光摄影师绝不妥协的一环。运用好三脚架一方面可避免相机抖动，另一方面可帮助摄影师仔细研究构图，静下心来检查画面中的所有细节。 云台 一个好的云台除稳定器材外，还有助于全景接片，球形云台操作起来比较快捷，使用率广。 快装板 每一部机身和长焦镜头上都应该装有快装板，以方便更换机身镜头等。L形快装板可使竖排接片变得更方便。 滤镜系统 现代数码摄影多用曝光合成技术代替渐变镜。ND和CPL是目前还没法取代的两种滤镜。虽然多次曝光加堆栈技术可以在一定程度上模仿ND镜效果，但是局限性太大，拍摄浪花等动态场景没有ND效果好，后期处理也比较费力。 此外还有摄影包，闪光灯等。 户外装备GPS，卫星通讯设备，登山杖，头等，帐篷，睡袋，烹饪装备(MSR Pocket Rocket)，急救包，防熊喷雾等…… 摄影app PlanIt! Pro: 可查看日出日落，月生月落，银河位置等等。还可以查看在地球上哪个位置的某一时刻会有物体挡住我们感兴趣的天体。 PlanIt!教学视频 DOF Calculator: 景深计算程序。 Northern Eye: 预测北极光。 计算机在处理图像数据中，CPU和内存相对比较重要。此外，用NAS组磁盘阵列是确保数据安全的最好方式。任何时候，一定要保证图像数据至少有两份相同的拷贝位于不同的存储设备中。 MacOS用户可以考虑使用Time Machine备份软件。Windows用户可以使用Allway Sync。 此外，异地存储是大型公司一定会采用的策略，可应对火灾、自然灾害等意外。设备有价，照片无价。专业摄影师可考虑以此种方式备份和管理数据。 数码摄影后期的基本概念文件格式应以raw格式拍片，方便后期。raw格式可无损调整白平衡，在不过曝的情况下后期减少曝光并不会损害画质。虽然对raw文件增加曝光会增加噪点，但是对现代多数相机来说，特别是对白天光线好的场景增加曝光，噪点和画质劣化在可以接受的范围内。 jpeg格式：通常用于普通旅游者拍“到此一游”、抢时间出片的新闻记者、以及影室或照相馆中专业摄影师——在灯光精确控制的情况下，可直接jpeg出片。 tiff格式：无损压缩，16位存储，还可以包括图层。在raw文件解码后并进行进一步后期调整时首选的格式。 色深使用16位RGB文件存储图像，以获得更多的色彩变化。特别是在天空、水面等色阶平滑过渡的地方，很多时候只要稍微加一点反差或者拉一点曲线就会出现色彩断层，此时16位文件可以有效缓解或避免这一问题。打印输出或用于网络浏览的时候，出于兼容性以及文件大小考虑，可改为8位RGB文件。 软件解码raw文件，原厂软件最准，但功能有限。 一般的方法是使用Lightroom管理影像，对影像进行基本的调整。之后使用Photoshop进行复杂的后期调整。 工作流拍摄——导入计算机——Lightroom处理——Photoshop处理——缩小或插值放大输出 ISO不变性如果一台相机提高ISO和后期提亮raw画面，对画质的损害如果几乎等同的话，称这台相机具有ISO不变性（ISOless或者ISOInvariance）。现代数码相机，特别是索尼传感器的相机，比如索尼，尼康，宾得等，基本已具有ISO不变性。利用相机这个性质，可以在条件所限下（比如没有三脚架的情况下）先用尽量低的ISO和防抖进行手持拍摄，或者用低ISO保持画面高光不过曝，然后通过后期提亮画面暗部，结果通常要好于直接增加ISO进行拍摄所得到的效果。在拍摄星空和银河的时候该方法同样有用：星星具有丰富的颜色，用高ISO拍摄（ISO3200/6400, F/2.8, 30s）可能会过曝，前提欠曝后期提亮可避免这个问题。","categories":[{"name":"Photography","slug":"Photography","permalink":"http://hanunimaas.com/categories/Photography/"}],"tags":[]},{"title":"《极致之美》——思考篇","slug":"yunman-photography-1","date":"2017-11-19T17:32:52.000Z","updated":"2017-11-23T07:33:00.823Z","comments":true,"path":"2017/11/19/yunman-photography-1/","link":"","permalink":"http://hanunimaas.com/2017/11/19/yunman-photography-1/","excerpt":"关于摄影和艺术创作的思考与讨论","text":"摄影中的主观创造一幅照片，展示的是摄影师想让你看到的角度。这个时间和空间的截片，不是简单地对真实世界的记录和如明信片的景点介绍，而是情绪的表达，是摄影师心中的风景。它强调的是按下快门那一瞬间最能打动摄影师内心的景物，也是摄影师的创造力和艺术沉淀的综合体现。拍摄显而易见的客观景物本身只是记录和搬运美景，发现摄影师独特的主观视角才是艺术创作。 那些很容易到达的地方，比如已经修好的观景台等，你在这里拍摄，别人也可以很容易在这里拍摄。此为旅游者视角，这本身并没有什么错。人们在一个地方修观景台的原因，多半是因为从那个角度看风景的角度最佳，或者该地点较容易到达。一个摄影师的作品集里有一些这样的“经典构图”是完全合理的。然而，摄影师要突破常规，需要多观察，多走动，去别人不曾到过的地方，以别人不曾观察到的角度拍摄，这样才可以拍摄出属于自己的照片。 而世之奇伟、瑰怪，非常之观，常在于险远，而人之所罕至焉，故非有志者不能至也。 ——《游褒禅山记》 还有一些人错误的认为，他们没有拍到好照片，是因为自己的相机不够好，或者因为自己没有机会去这些地方，他们把问题都归结于客观原因。其实这是错误的。虽然器材对于摄影来说确实是重要的一环，但拿着好器材拍出烂照片的例子比比皆是。好的器材只有在高手的手中才能彻底发挥它的优势。一把顶级的小提琴，放在不懂音乐的人的手中，拉出来的声音注定只能是噪音。此外，陌生以及壮丽的场景，确实能激发人的观察力和创作欲。然而，世上那些著名景点每天都有成千上万人去游览，每人用手机随便一拍就应该是大片，可现实并不都是这样。比到达一个绝美地方更重要的是，我们必须有一双发现美的眼睛，以及展现这些美的技术手段。 英国著名摄影师David Norton在他的《等待光纤》一书中说道： 这种广为流传的错误想法是一个很容易掉进去的陷阱——相信如果自己随便到了某个壮丽的地方就足够了，在哪里拍摄大片就像从树上摘下成熟的果实那样简单。但事实上，真正独特、引人入胜、令人惊叹、细致入微和惟妙惟肖的照片是“造”出来的，而不是“照”出来的。他们是思维的产物，是通过坚持不懈的努力和熟练的技术将想像变为现实。 风光摄影的几个阶段 技术上过关，曝光准确，对焦清晰。 讲究构图和色彩。 去到风景名胜，等待光线，模仿经典构图。 若遇到绝佳天气，可能还会拍得比原版还好看。对绝大多数摄影爱好者，甚至很多专业摄影师来说，第三条就是最高境界了。 在经典机位模仿前人作品是很好的学习机会，几乎每个人都会经历这个阶段。而摄影师应追求进一步的提高，在作品里表现出自己个人的视角、情感和艺术风格，拍摄属于摄影师“自己”的照片。独特和新颖，是大多数风光摄影师们所追求的最高阶段。 小景物，大风光当代主流风光摄影主要表现自然界壮丽、宏伟、辽阔的大风光。运用广角镜头，重视前景微小细节，结合近景小品和大风光的思路，称为“小景物，大风光”。拍摄这样的照片需要： 敏锐的观察力和创造力 很强的组织画面元素的功力 技术上的景深合成 超广角图像中常见的过渡： 前景冷色调与远景暖色调（落日） 前景低饱和与远景高饱和 前景暗色调与远景亮色调 前景清晰远景模糊 运用好画面中的过渡，可塑造影像强烈的三维透视感。 总结 我们不只是用相机拍照，我们带到摄影作品中去的是所有我们读过的书、看过的电影、听过的音乐、走过的路和爱过的人。 摄影离不开客观现实，但一幅优秀的作品中更包含了摄影师的主观创造。任何强调客观，忽略主观的想法都有失偏颇。我们拍摄的是客观风景，但反映出的其实是摄影师自己的主观内心。","categories":[{"name":"Photography","slug":"Photography","permalink":"http://hanunimaas.com/categories/Photography/"}],"tags":[]},{"title":"R语言学习（三）矩阵和数组","slug":"R-programming-3","date":"2017-11-15T19:23:41.017Z","updated":"2017-11-22T20:16:25.127Z","comments":true,"path":"2017/11/15/R-programming-3/","link":"","permalink":"http://hanunimaas.com/2017/11/15/R-programming-3/","excerpt":"第三章——矩阵和数组","text":"第三章——矩阵和数组 矩阵是一种特殊的向量，包含两个附加的属性：行数和列数。矩阵是数组的特例，数组可以大于两维，而矩阵只有两维。 创建矩阵矩阵相当于按列存储一个向量，但是实际也存在矩阵类(matrix class)。其中nrow或者ncol只给出一个参数也可以创建向量。 &gt; y &lt;- matrix(c(1:4), nrow = 2, ncol = 2)&gt; y [,1] [,2][1,] 1 3[2,] 2 4&gt; which(y&gt;2) #矩阵的按列存储性质[1] 3 4&gt; class(y)[1] \"matrix\"&gt; attributes(y)$dim[1] 2 2 或者先创建矩阵： &gt; y &lt;- matrix(nrow = 2, ncol = 2) 再为每一个元素赋值：y[1,1] &lt;- 1… 也可以对矩阵的子矩阵进行赋值，假设y行数大于3： y[c(1,3),] &lt;- matrix(c(1,1,8,12), nrow = 2) 此外，还可以用rownames()和colnames()给矩阵的行和列命名： &gt; colnames(y) = c('a','b')&gt; y a b[1,] 1 3[2,] 2 4 用nrow()和ncol()访问矩阵的行数和列数。 矩阵运算加减乘除矩阵乘法（线性代数意义上的乘法） &gt; y %*% y [,1] [,2][1,] 7 15[2,] 10 22 y*3代表矩阵每个元素都乘以3，而y+y代表矩阵每个位置对应的元素相加。 矩阵元素筛选&gt; x &lt;- matrix(c(1:6), nrow = 3)&gt; x [,1] [,2][1,] 1 4[2,] 2 5[3,] 3 6&gt; x[x[,2] &gt;= 5,] [,1] [,2][1,] 2 5[2,] 3 6&gt; 先选出矩阵第二列大于5的元素，然后再将布尔向量应用到原矩阵中，选择出第2和3行。 另外一种选择方法： &gt; x[x[,1] &gt; 1 &amp; x[,2] &gt; 5,][1] 3 6&gt; x[,1]&gt;1[1] FALSE TRUE TRUE&gt; x[,2] &gt; 5[1] FALSE FALSE TRUE&gt; x[,1] &gt; 1 &amp; x[,2] &gt; 5[1] FALSE FALSE TRUE 用“与”运算符&amp;从矩阵中选出了第一列大于1并且第二列大于5的部分。 要注意的是，如果只从矩阵提取一行，会自动变成向量。若仍想保留矩阵属性，需要使用drop参数。 &gt; dim(x)[1] 3 2&gt; dim(x[,1]) #此时已经成为向量，没有dim属性NULL&gt; dim(x[,1, drop = F])[1] 3 1 也可以用as.matrix()将向量转化为矩阵。 返回矩阵某元素的位置使用row()和col()函数查看矩阵中某元素的位置。在某些特殊情况下会用到，比如创建对称矩阵时： &gt; m &lt;- matrix(nrow = 4, ncol = 4)&gt; m &lt;- ifelse(row(m) == col(m), 1, 0.2)&gt; m [,1] [,2] [,3] [,4][1,] 1.0 0.2 0.2 0.2[2,] 0.2 1.0 0.2 0.2[3,] 0.2 0.2 1.0 0.2[4,] 0.2 0.2 0.2 1.0&gt; row(m) [,1] [,2] [,3] [,4][1,] 1 1 1 1[2,] 2 2 2 2[3,] 3 3 3 3 可以使对角线元素为1，其余元素为0.2。 apply函数apply(m, dimcode, f, fargs) m为矩阵。 dimcode = 1按行应用函数，dimcode = 2按列应用函数。 f是函数。 fargs是函数的参数。如果所调用的函数的返回值是一个包含k个元素的向量，那么apply()的结果就有k行。有时会引起矩阵的行列数的变化，需要运行后dim检查一下结果。 插入或删除矩阵的行或列向量直接使用c()插入： &gt; x = c(1:7)&gt; x = c(x[1:3], 20, x[4:7])&gt; x[1] 1 2 3 20 4 5 6 7 矩阵使用cbind()和rbind()插入列和行。然而通过这两个函数若用于循环创建矩阵比较耗时，所以最好的办法是先定义好一个大矩阵然后再循环赋值。 想要删除矩阵的行或列，可以通过重新索引矩阵某一部分的方式，或者比如使用c(-1)索引行或列今儿删除矩阵的第一行或列。 高维数组一个简单的例子，通过两个矩阵组成高维数组： &gt; x &lt;- matrix(c(1:12), nrow = 3)&gt; y &lt;- matrix(c(24:13), nrow = 3)&gt; x [,1] [,2] [,3] [,4][1,] 1 4 7 10[2,] 2 5 8 11[3,] 3 6 9 12&gt; y [,1] [,2] [,3] [,4][1,] 24 21 18 15[2,] 23 20 17 14[3,] 22 19 16 13&gt; tests &lt;- array(data = c(x, y), dim = c(3,4,2)) #创建高维数组，其中dim中的2代表数据共有两层(两个矩阵组成)&gt; dim(tests) #维度由三个元素构成[1] 3 4 2&gt; tests, , 1 [,1] [,2] [,3] [,4][1,] 1 4 7 10[2,] 2 5 8 11[3,] 3 6 9 12, , 2 [,1] [,2] [,3] [,4][1,] 24 21 18 15[2,] 23 20 17 14[3,] 22 19 16 13&gt; tests[3,2,1] #返回第一个矩阵中的第三行第二列的元素[1] 6","categories":[{"name":"R programming","slug":"R-programming","permalink":"http://hanunimaas.com/categories/R-programming/"}],"tags":[]},{"title":"R语言学习（二）向量","slug":"R-programming-2","date":"2017-11-01T20:49:12.000Z","updated":"2017-11-22T20:16:33.158Z","comments":true,"path":"2017/11/01/R-programming-2/","link":"","permalink":"http://hanunimaas.com/2017/11/01/R-programming-2/","excerpt":"第二章——向量","text":"第二章——向量 向量是R语言中最基础也是最常用的数据结构。 向量性质可以用c()添加和合并向量。矩阵为按列存储的向量。尽量避免使用for(i in 1:inlength(x))在循环中，因为length(x)有可能为0： &gt; x &lt;- c()&gt; xNULL&gt; 1:length(x)[1] 1 0 声明向量向量不需要声明，可以直接赋值。先创建向量再赋值的例子： &gt; y &lt;- vector(length=2)&gt; y[1] FALSE FALSE&gt; y[1] &lt;- 5&gt; y[2] &lt;- 12&gt; y[1] 5 12 循环补齐在对两个向量运算时，如果要求这两个向量具有相同长度，则较短的向量会被循环补齐: &gt; c(1,2,4) + c(6,0,9,20,22)[1] 7 2 13 21 24Warning message:In c(1, 2, 4) + c(6, 0, 9, 20, 22) : longer object length is not a multiple of shorter object length 等同于c(1,2,4,1,2) + c(6,0,9,20,22) 常用向量运算*为元素与元素相乘: &gt; c(1,2,4) * c(5,0,-1)[1] 5 0 -4 负号用于删除元素，删除最后一个元素用length(): &gt; z &lt;- c(5,12,13)&gt; z[-1][1] 12 13&gt; z[-1:-2][1] 13&gt; z[1:(length(z)-1)][1] 5 12 运算符优先级问题: &gt; 1:2-1[1] 0 1&gt; 1:(2-1)[1] 1 seq()创建向量: &gt; seq(from=12, to=30, by=3)[1] 12 15 18 21 24 27 30&gt; seq(from=1.1, to=2, length=10) [1] 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2.0 rep()创建向量: &gt; rep(1:3,2)[1] 1 2 3 1 2 3&gt; rep(1:3,each=2)[1] 1 1 2 2 3 3 使用all()和any()&gt; x &lt;- 1:10&gt; any(x&gt;8)[1] TRUE&gt; all(x&gt;8)[1] FALSE 计算向量累积和cumsum(): &gt; cumsum(1:10) [1] 1 3 6 10 15 21 28 36 45 55 向量化运算符假设我们希望对向量x中每一个元素使用函数f()，很多情况下对x调用f()就可以完成。提高R代码执速度的有效方法之一是向量化，这意味着应用到向量上的函数实际上应用在其每一个元素上: &gt; w &lt;- function(x) return(x+1)&gt; w(c(5,2,8))[1] 6 3 9&gt; sqrt(1:8)[1] 1.000000 1.414214 1.732051 2.000000 2.236068 2.449490 2.645751 2.828427 sapply(x,f)对x的每一个元素使用函数f()，并将结果转化为矩阵: &gt; z12 &lt;- function(z) return(c(z,z^2)) #函数返回向量&gt; &gt; z12(1:8) #直接将函数应用在向量上，返回一个更长的向量 [1] 1 2 3 4 5 6 7 8 1 4 9 16 25 36 49 64&gt; sapply(1:8, z12) #使用sapply返回矩阵，矩阵每一列为对向量单个元素执行函数返回的结果 [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8][1,] 1 2 3 4 5 6 7 8[2,] 1 4 9 16 25 36 49 64 缺失值NA与NULLNA代表存在，但是缺失；NULL代表空，不存在: &gt; x &lt;- c(1,NA,3)&gt; mean(x)[1] NA&gt; mean(x, na.rm=T)[1] 2&gt; x &lt;- c(1,NULL,3)&gt; mean(x)[1] 2&gt; x[1] 1 3&gt; mode(x[1])[1] \"numeric\"&gt; mode(x[2])[1] \"numeric\" NULL可以初始化向量： &gt; z &lt;- NULL&gt; c(z,3)[1] 3&gt; z &lt;- NA&gt; c(z,3)[1] NA 3 注意：NULL是R的一种特殊对象，它没有模式。 筛选使用运算符(比如&gt;)返回的布尔值向量对向量元素进行筛选&gt; z &lt;- c(5,2,-3,8)&gt; j &lt;- z*z &gt; 8&gt; j[1] TRUE FALSE TRUE TRUE&gt; y &lt;- c(1,2,30,5)&gt; y[j][1] 1 30 5 另一个例子： &gt; x &lt;- c(1,3,8,2,20)&gt; x[x &gt; 3] &lt;- 0&gt; x[1] 1 3 0 2 0 使用subset()函数进行筛选可以处理缺失值NA： &gt; x &lt;- c(6,1:3,NA,12)&gt; x[x &gt; 5][1] 6 NA 12&gt; subset(x, x &gt; 5)[1] 6 12 使用which()函数找到满足条件元素所在的位置&gt; z &lt;- c(5,2,-3,8)&gt; which(z*z &gt;8)[1] 1 3 4&gt; which(z*z &gt;8)[1] #找到满足条件元素首次出现的位置[1] 1 向量化的ifelse()函数ifelse(b,u,v)如果b[i]为真，则返回值的第i个元素为u[i]，否则为v[i]： &gt; x &lt;- c(5,2,9,12)&gt; ifelse(x &gt; 6, 2*x, 3*x)[1] 15 6 18 24 diff()函数比较向量每个元素和后面的元素之差， sign()函数将向量中的数值转化为1、0或者-1： &gt; u &lt;- c(1,6,7,2,3,5)&gt; diff(u)[1] 5 1 -5 1 2&gt; sign(diff(u))[1] 1 1 -1 1 1 测试向量相等使用all()函数： &gt; x &lt;- 1:3&gt; y &lt;- c(1,2,4)&gt; x == y[1] TRUE TRUE FALSE&gt; all(x == y)[1] FALSE 符号:产生的是整数，而c()产生的是浮点数，identical(x,y)判断两个对象是否完全一样： &gt; x &lt;- 1:2&gt; y &lt;- c(1,2)&gt; all(x == y)[1] TRUE&gt; identical(x,y)[1] FALSE&gt; typeof(x)[1] \"integer\"&gt; typeof(y)[1] \"double\" 向量元素的名称使用name()给向量中的元素命名，或查询向量元素名称： &gt; x &lt;- 1:3&gt; x[1] 1 2 3&gt; names(x) &lt;- c(\"a\",\"b\",\"ab\")&gt; names(x)[1] \"a\" \"b\" \"ab\"&gt; x a b ab 1 2 3 &gt; x[\"b\"]b 2 c()的强制类型转换&gt; c(5,2,\"abc\")[1] \"5\" \"2\" \"abc\"&gt; c(5,2,c(1.5,6))[1] 5.0 2.0 1.5 6.0","categories":[{"name":"R programming","slug":"R-programming","permalink":"http://hanunimaas.com/categories/R-programming/"}],"tags":[]},{"title":"Running Lemon-Tree on Arg1.CD68-correlated Modules","slug":"run-lemon-tree","date":"2017-10-26T13:30:05.000Z","updated":"2017-11-23T12:55:02.519Z","comments":true,"path":"2017/10/26/run-lemon-tree/","link":"","permalink":"http://hanunimaas.com/2017/10/26/run-lemon-tree/","excerpt":"This is to show how to run Lemon-Tree algorithm on our dataset","text":"This is to show how to run Lemon-Tree algorithm on our dataset Data For WGCNA: transcriptomics data with stable patients, same classification as Jan’s version. For Lemon-Tree: transcriptomics data with 7 modules on all patients. See the file arg1.cd68.stable.pdf. Modules: indianred3, lightslateblue, brown4, mediumpurple4, orangered1, yellowgreen, firebrick4. Preprocess: Scale the feature to standard normal distribution before running the Lemon-Tree program. Procedure From WGCNA results on stable patients, select 7 interesting modules (5 positive correlation, 2 negative correlation to Arg1.CD68) including 1645 unique genes. From 1645 genes select candidate regulators according to GO annotation. 205 candidates were selected.GO:0004871, signal transducer activityGO:0000989, transcription factor activity, transcription factor binding Run Lemon-Tree on the 1645 genes with all stable and unstable patients. Clustering result of Lemon-Tree includes 36 clusters with 1456 genes. Assign 205 candidate regulators on 36 clusters. 100 highest assignments were selected. 35 of all clusters have regulators. 74 unique regulators were selected.Frequency of regulators occurred more than one time: BRD7(3), ENY2(2), EVI2A(3), GPR65(3), GRN(4), HEYL(6), LANCL1(2), MAP4K4(2), NMI(3), RERE(2), ROR(2), SETD3(2), SS18L2(2), TGFB1I1(2), TOB1(2) GO enrichment analysis on the 35 clusters. Trace the genes back from WGCNA modules. Most of the genes gathering in one Lemon-Tree cluster are also belong to one WGCNA module. Calculate the genes to WGCNA eigengene. Regulator genes tend to have higher correlation to the corresponding WGCNA eigengene. Possible Improvements Check the regulators which regulate more than one cluster. Check the GO results to find interesting clusters. Add miRNA as regulators. Variables in R transcriptomics.stable #WGCNA data moduleColors.stable #WGCNA modules regulators.old # GO:0004871 &amp; GO:0000989 genes stable.arg1.modules #7 interesting modules stable.arg1.genes #selected genes from 7 modules arg1.transcriptomics.stableandunstable.scaled #scaled data for Lemon-Tree, 1645 genes ID.nodup/arg1.transcriptomics.IDs #ID information arg1.regulators.old #candidate regulators for 7 modules tight.clusters.su #Lemon-Tree clustering result, 1456 genes top.regs.su.old #top 100 regulator assignments reg.list.su.old #regulator list for output reg.gene.list.su.old $regulator and gene list for output Lemon Tree程序的基本步骤ganesh通过gibbs sampling进行双向聚类： 随机分配N个gene到K0个类，随机分配M个样本到Lk,0个样本类。 N次循环，从某类中随机删除gene i，对每个类，以及i单独成为一类的情况，计算将i放入k中的贝叶斯概率。 经过n次迭代得到稳定的聚类结果。 tight_clusterregulators注意事项首先要标准化 scale features 其次要选择candidate regulator genes from GO annotation 相关文献 References Segal E, Shapira M, Regev A, Pe’er D, Botstein D, et al.(2003) Module networks: identifying regulatory modules and their condition-specific regulators from gene expression data. Nature Genetics 34: 166–167. Bonnet E, Calzone L, Michoel T. (2015) Integrative multi-omics module network inference with Lemon-Tree. PLoS Comput Biol 11(2): e1003983. Joshi A, Van de Peer Y, Michoel T (2008) Analysis of a Gibbs sampler for model based clustering of gene expression data. Bioinformatics 24: 176–183. Joshi A, De Smet R, Marchal K,Van de Peer Y, Michoel T( 2009) Module networks revisited: computational assessment and prioritization of model predictions. Bioinformatics 25: 490- 496.","categories":[{"name":"Research","slug":"Research","permalink":"http://hanunimaas.com/categories/Research/"}],"tags":[]},{"title":"R语言学习（一）入门","slug":"R_programming_1","date":"2017-10-26T07:16:27.000Z","updated":"2017-12-05T21:18:04.309Z","comments":true,"path":"2017/10/26/R_programming_1/","link":"","permalink":"http://hanunimaas.com/2017/10/26/R_programming_1/","excerpt":"R语言免费，开源，语法简单，适合从事数学、统计学等非计算机人员学习使用。","text":"R语言免费，开源，语法简单，适合从事数学、统计学等非计算机人员学习使用。 目前比较流行的R语言学习书籍是《R语言实战》(R in Action: Data Analysis and Graphic with R)，此书易于上手，实例较多，适合非计算机专业人员学习使用。 而本系列内容基于《R语言编程艺术》(The Art of R Programming)，目的是以一个计算机专业人员的角度学习使用R语言并深入理解R语言的机制。 运行R程序交互模式&gt; source(\"z.R\") 批处理模式(ubuntu terminal)$ R CMD BATCH z.R R语言函数的变量作用域局部变量只有函数体内部可见的变量是“局部变量” &gt; x &lt;- 5&gt; f &lt;- function() x &lt;- 4&gt; f()&gt; x[1] 5 全局变量全局变量是在函数之外创建的变量，在函数内部也可以访问。可以通过&lt;&lt;-在函数内部给全局变量赋值 &gt; y &lt;- 4&gt; f &lt;- function(x) y &lt;&lt;- 3&gt; f()&gt; y[1] 3 默认参数&gt; g &lt;- function(x, y=2, z=T)&#123;...&#125; R语言的数据结构1. 向量 Vector向量是R语言的核心。一个向量内部的数据类型是单一的，不可以由整数元素和字符串混合构成。在R语言中即使单个的数实际上也是由向量所表示的 &gt; x &lt;- 8&gt; x[1] 8 2. 字符串 Character&gt; y &lt;- \"abc\"&gt; y[1] \"abc\"&gt; length(y)[1] 1 字符串连接与分割使用paste连接字符串，用strsplit分割字符串 &gt; u &lt;- paste(\"abc\", \"de\", \"f\")&gt; u[1] \"abc de f\"&gt; v &lt;- strsplit(u, \" \")&gt; v[[1]][1] \"abc\" \"de\" \"f\" &gt; v[[1]][1] \"abc\" \"de\" \"f\" &gt; 3. 矩阵 Matrix也可以理解为按列存放的向量 &gt; m &lt;- rbind(rnorm(2), rnorm(2))&gt; m [,1] [,2][1,] 0.07614777 0.26227249[2,] 0.81721921 0.05898863&gt; m[3][1] 0.2622725&gt; 4. 列表 List创建列表&gt; x &lt;- list(u = 2, v = \"abc\")&gt; x$u[1] 2$v[1] \"abc\"&gt; x$u[1] 2 列表作为函数返回值&gt; hn &lt;- hist(Nile)&gt; hn$breaks [1] 400 500 600 700 800 900 1000 1100 1200 1300 1400$counts [1] 1 0 5 20 25 19 12 11 6 1$density [1] 0.0001 0.0000 0.0005 0.0020 0.0025 0.0019 0.0012 0.0011 0.0006 0.0001$mids [1] 450 550 650 750 850 950 1050 1150 1250 1350$xname[1] \"Nile\"$equidist[1] TRUEattr(,\"class\")[1] \"histogram\" 注意attr后面的内容，标志了hn的属性histogram也可使用str()输出列表，更为直观 &gt; str(hn)List of 6 $ breaks : int [1:11] 400 500 600 700 800 900 1000 1100 1200 1300 ... $ counts : int [1:10] 1 0 5 20 25 19 12 11 6 1 $ density : num [1:10] 0.0001 0 0.0005 0.002 0.0025 0.0019 0.0012 0.0011 0.0006 0.0001 $ mids : num [1:10] 450 550 650 750 850 950 1050 1150 1250 1350 $ xname : chr \"Nile\" $ equidist: logi TRUE - attr(*, \"class\")= chr \"histogram\" 5. 数据框 Data Frame实际上是列表，只不过每个列表存储着一列向量。data.frame通常通过读取文件来创建，此处不再举例。 6. 类 ClassR语言是一门面向对象的编程语言。每一个对象都有其类别属性，R语言的泛型函数可以根据变量的类别来执行。通过class()查看变量的类 &gt; hn &lt;- hist(Nile)&gt; class(hn)[1] \"histogram\" 通过attributes()查看变量的属性，可以直接使用属性(变量)语句 &gt; attributes(hn)$names[1] \"breaks\" \"counts\" \"density\" \"mids\" \"xname\" \"equidist\"$class[1] \"histogram\"&gt; names(hn)[1] \"breaks\" \"counts\" \"density\" \"mids\" \"xname\" \"equidist\" 总结变量（对象）的类型&gt; m &lt;- rbind(rnorm(2), rnorm(2))&gt; m [,1] [,2][1,] 0.07614777 0.26227249[2,] 0.81721921 0.05898863&gt; typeof(m)[1] \"double\"&gt; mode(m)[1] \"numeric\"&gt; attributes(m)$dim[1] 2 2&gt; class(m)[1] \"matrix\" 清空环境变量rm(list = ls())","categories":[{"name":"R programming","slug":"R-programming","permalink":"http://hanunimaas.com/categories/R-programming/"}],"tags":[]},{"title":"博士学习计划","slug":"study_plan","date":"2017-10-25T06:39:22.000Z","updated":"2017-11-22T21:04:48.807Z","comments":true,"path":"2017/10/25/study_plan/","link":"","permalink":"http://hanunimaas.com/2017/10/25/study_plan/","excerpt":"Things to be done before obtaining PhD Degree","text":"应掌握的技能 精通R语言，以计算机专业人员而非统计学家那样使用R语言。 掌握spark分布式计算，学习scala，具备分布式编程能力。 关注最新的机器学习算法：深度神经网络、高斯过程、增强学习等，学习CUDA和TensorFlow。 git, LaTeX等基本科研工具的掌握。 应发表的文章 一作SCI： 3-5篇，应至少有1-2篇高质量文章 非一作SCI： 若干 目前一篇Nature Communications在投。 在美国的顶级实验室实习备选top labs： Havard University(美国哈佛大学) Northeastern University(美国东北大学): Barabási Lab 应去国家 已去过：英国、法国、德国、美国、荷兰、比利时、意大利、西班牙、葡萄牙、奥地利、瑞典、丹麦、卢森堡、土耳其、匈牙利、斯洛伐克、斯洛文尼亚、罗马尼亚、梵蒂冈、摩纳哥、新加坡、印度尼西亚、 将来要去：摩洛哥、希腊、俄罗斯、芬兰、爱沙尼亚、拉脱维亚、立陶宛、波兰、挪威、冰岛、保加利亚、克罗地亚、塞尔维亚、阿根廷、南极","categories":[{"name":"Others","slug":"Others","permalink":"http://hanunimaas.com/categories/Others/"}],"tags":[]}]}